pipeline {
    agent any

    environment {
        NODE_ENV = 'production'
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Clean Workspace') {
            steps {
                deleteDir()
            }
        }

        stage('Install Dependencies') {
            steps {
                retry(2) {
                    bat 'npm install'
                }
            }
        }

        stage('Build Angular Project') {
            steps {
                bat 'npm run build -- --configuration production'
            }
        }

        stage('Archive Build') {
            steps {
                archiveArtifacts artifacts: 'dist/**', fingerprint: true
            }
        }

        stage('Deploy to IIS') {
            steps {
                bat '''
                if not exist "C:\\inetpub\\wwwroot\\ngrx-project" mkdir "C:\\inetpub\\wwwroot\\ngrx-project"
                xcopy /E /Y /I dist\\* "C:\\inetpub\\wwwroot\\ngrx-project\\"
                '''
            }
        }

        stage('Restart IIS') {
            steps {
                bat '''
                REM Use Sysnative to access 64-bit System32 from 32-bit Jenkins
                if exist C:\\Windows\\Sysnative\\iisreset.exe (
                    C:\\Windows\\Sysnative\\iisreset.exe /restart
                ) else (
                    REM Fallback if Sysnative not available
                    if exist C:\\Windows\\System32\\iisreset.exe (
                        C:\\Windows\\System32\\iisreset.exe /restart
                    ) else (
                        echo IISRESET not found!
                        exit /b 1
                    )
                )
                '''
            }
        }
    }

    post {
        success {
            echo 'Build and deployment succeeded!'
        }
        failure {
            echo 'Build or deployment failed! Check console logs.'
        }
    }
}
