pipeline {
    agent any

    environment {
        DEPLOY_ROOT = "C:\\inetpub\\wwwroot\\ngrx-project"
        NODE_HOME = "C:\\Program Files\\nodejs" // adjust if different
        PATH = "${NODE_HOME};${env.PATH}"
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout([$class: 'GitSCM',
                          branches: [[name: '*/main']],
                          doGenerateSubmoduleConfigurations: false,
                          extensions: [],
                          userRemoteConfigs: [[url: 'https://github.com/GaurShankarGope/My-First-Jenkin-project.git']]])
            }
        }

        stage('Install Dependencies') {
            steps {
                bat 'npm install'
            }
        }

        stage('Build Angular Project') {
            steps {
                bat 'npm run build -- --configuration production'
            }
        }

        stage('Deploy to IIS') {
            steps {
                script {
                    def timestamp = new Date().format("yyyyMMdd-HHmmss")
                    def targetPath = "${DEPLOY_ROOT}\\build-${timestamp}"

                    echo "Creating deployment folder: ${targetPath}"
                    bat "mkdir \"${targetPath}\""

                    echo "Copying files to IIS..."
                    // ignore robocopy exit codes
                    bat "robocopy \"${WORKSPACE}\\dist\\ngrx-project\" \"${targetPath}\" /E /NFL /NDL /NJH /NJS /nc /ns /np || exit 0"

                    echo "Deployment complete!"
                }
            }
        }

        stage('Cleanup Old Builds') {
            steps {
                script {
                    echo "Cleaning up old builds (keeping last 5)..."
                    bat """
                        setlocal enabledelayedexpansion
                        set count=0
                        for /f "tokens=*" %%D in ('dir /b /ad /o-d "${DEPLOY_ROOT}\\build-*"') do (
                            set /a count+=1
                            if !count! gtr 5 (
                                echo Deleting old build: %%D
                                rmdir /s /q "${DEPLOY_ROOT}\\%%D"
                            )
                        )
                    """
                }
            }
            post {
                failure {
                    echo "Old builds cleanup failed, but continuing..."
                }
            }
        }
    }

    post {
        success {
            echo "Build and deployment completed successfully!"
        }
        failure {
            echo "Build or deployment failed!"
        }
    }
}
