pipeline {
    agent any

    environment {
        NODE_HOME = "C:\\Program Files\\nodejs"
        PATH = "${env.NODE_HOME};${env.PATH}"
        DEPLOY_ROOT = "C:\\inetpub\\wwwroot\\ngrx-project"
        TIMESTAMP = "${new Date().format('yyyyMMdd-HHmmss')}"
        DEPLOY_PATH = "${DEPLOY_ROOT}\\build-${TIMESTAMP}"
        IIS_SITE_NAME = "ngrx-project" // Replace with your IIS site name
    }

    stages {
        stage('Checkout SCM') {
            steps {
                git(
                    url: 'https://github.com/GaurShankarGope/My-First-Jenkin-project.git',
                    branch: 'main'
                )
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('ngrx-project') {
                    bat 'npm install'
                }
            }
        }

        stage('Build Angular Project') {
            steps {
                dir('ngrx-project') {
                    bat 'npm run build -- --configuration production'
                }
            }
        }

        stage('Deploy to IIS (Timestamped)') {
            steps {
                script {
                    echo "Creating deployment folder: ${DEPLOY_PATH}"
                    bat "mkdir \"${DEPLOY_PATH}\""

                    def sourcePath = "${env.WORKSPACE}\\ngrx-project\\dist\\ngrx-project\\"
                    bat "robocopy \"${sourcePath}\" \"${DEPLOY_PATH}\" /E /NFL /NDL /NJH /NJS /nc /ns /np"
                }
            }
        }

        stage('Update IIS Site') {
            steps {
                script {
                    echo "Updating IIS site ${IIS_SITE_NAME} to new deployment folder"
                    bat """
                    powershell -Command "Import-Module WebAdministration; \
                    Set-ItemProperty 'IIS:\\Sites\\${IIS_SITE_NAME}' -Name physicalPath -Value '${DEPLOY_PATH}'; \
                    Restart-WebItem 'IIS:\\Sites\\${IIS_SITE_NAME}'"
                    """
                }
            }
        }

        stage('Cleanup Old Builds') {
            steps {
                script {
                    echo "Keeping only last 5 builds..."
                    bat """
                    powershell -Command "\$dirs = Get-ChildItem -Path '${DEPLOY_ROOT}' -Directory | Sort-Object CreationTime -Descending | Select-Object -Skip 5; \
                    foreach (\$d in \$dirs) { Remove-Item -Recurse -Force \$d.FullName }"
                    """
                }
            }
        }
    }

    post {
        success {
            echo "Build & deployment succeeded!"
        }
        failure {
            echo "Build or deployment failed!"
        }
    }
}
