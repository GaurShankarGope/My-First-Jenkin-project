pipeline {
    agent any

    environment {
        NODE_HOME = "C:\\Program Files\\nodejs"
        PATH = "${env.NODE_HOME};${env.PATH}"
        IIS_SITE_NAME = "ngrx-project"  // Change to your IIS site name
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout([$class: 'GitSCM', 
                          branches: [[name: '*/main']], 
                          userRemoteConfigs: [[url: 'https://github.com/GaurShankarGope/My-First-Jenkin-project.git']]])
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('ngrx-project') {
                    bat 'npm install'
                }
            }
        }

        stage('Build Angular Project') {
            steps {
                dir('ngrx-project') {
                    bat 'npm run build -- --configuration production'
                }
            }
        }

        stage('Deploy to IIS') {
            steps {
                script {
                    def timestamp = new Date().format("yyyyMMdd-HHmmss")
                    def targetPath = "C:\\inetpub\\wwwroot\\ngrx-project\\build-${timestamp}"
                    def sourcePath = "${env.WORKSPACE}\\dist\\ngrx-project"  // Corrected build path

                    if (!fileExists(sourcePath)) {
                        error "Build output not found at ${sourcePath}. Check Angular build configuration."
                    }

                    echo "Creating deployment folder: ${targetPath}"
                    bat "mkdir \"${targetPath}\""

                    echo "Copying files to IIS..."
                    bat "robocopy \"${sourcePath}\" \"${targetPath}\" /E /NFL /NDL /NJH /NJS /nc /ns /np"

                    echo "Updating IIS site to new folder..."
                    powershell """
                        Import-Module WebAdministration
                        Set-ItemProperty 'IIS:\\Sites\\${env.IIS_SITE_NAME}' -Name physicalPath -Value '${targetPath}'
                        Restart-WebAppPool '${env.IIS_SITE_NAME}'
                        Write-Host 'IIS site updated successfully!'
                    """
                }
            }
        }

        stage('Cleanup Old Builds') {
            steps {
                script {
                    echo 'Removing builds older than 5 deployments...'
                    def buildDir = new File("C:\\inetpub\\wwwroot\\ngrx-project")
                    def builds = buildDir.listFiles().findAll { it.isDirectory() && it.name.startsWith("build-") }
                    builds.sort { a, b -> b.lastModified() <=> a.lastModified() } // newest first
                    builds.drop(5).each { oldBuild ->
                        echo "Deleting old build: ${oldBuild}"
                        bat "rmdir /s /q \"${oldBuild}\""
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Build and deployment completed successfully!'
        }
        failure {
            echo 'Build or deployment failed!'
        }
    }
}
