pipeline {
    agent any

    environment {
        NODE_HOME = "C:\\Program Files\\nodejs"
        PATH = "${env.NODE_HOME};${env.PATH}"
    }

    stages {
        stage('Checkout SCM') {
            steps {
                git(
                    url: 'https://github.com/GaurShankarGope/My-First-Jenkin-project.git',
                    branch: 'main'
                )
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('ngrx-project') {
                    bat 'npm install'
                }
            }
        }

        stage('Build Angular Project') {
            steps {
                dir('ngrx-project') {
                    bat 'npm run build -- --configuration production'
                }
            }
        }

        stage('Deploy to IIS') {
            steps {
                script {
                    // Timestamped folder for backup
                    def timestamp = new Date().format("yyyyMMdd-HHmmss")
                    def targetPath = "C:\\inetpub\\wwwroot\\ngrx-project\\build-${timestamp}"
                    def sourcePath = "${env.WORKSPACE}\\ngrx-project\\dist\\ngrx-project"

                    echo "Creating deployment folder: ${targetPath}"
                    bat "mkdir \"${targetPath}\""

                    echo "Copying files to IIS..."
                    bat "robocopy \"${sourcePath}\" \"${targetPath}\" /E /NFL /NDL /NJH /NJS /nc /ns /np"
                }
            }
        }

        stage('Update IIS Site') {
            steps {
                script {
                    def siteName = "ngrx-project" // Your IIS site name
                    def wwwRoot = "C:\\inetpub\\wwwroot\\ngrx-project"

                    echo "Updating IIS site: ${siteName}"

                    // Optional: backup old site
                    bat "robocopy \"${wwwRoot}\" \"${wwwRoot}-backup\" /MIR /NFL /NDL /NJH /NJS /nc /ns /np"

                    // Copy new build to wwwroot
                    def latestBuild = bat(returnStdout: true, script: "dir /b /ad /o-d \"${wwwRoot}\" | findstr build-").trim()
                    bat "robocopy \"${wwwRoot}\\${latestBuild}\" \"${wwwRoot}\" /MIR /NFL /NDL /NJH /NJS /nc /ns /np"

                    // Restart IIS site
                    bat """
                    powershell -Command "Import-Module WebAdministration; \
                    Stop-WebSite -Name '${siteName}'; \
                    Start-WebSite -Name '${siteName}'"
                    """
                }
            }
        }

        stage('Cleanup Old Builds') {
            steps {
                script {
                    def wwwRoot = "C:\\inetpub\\wwwroot\\ngrx-project"
                    echo "Cleaning up old builds..."
                    bat "powershell -Command \"Get-ChildItem -Path '${wwwRoot}' -Directory | Sort-Object LastWriteTime -Descending | Select-Object -Skip 5 | Remove-Item -Recurse -Force\""
                }
            }
        }
    }

    post {
        success {
            echo "Build & deployment succeeded!"
        }
        failure {
            echo "Build or deployment failed!"
        }
    }
}
